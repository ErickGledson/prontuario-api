name: Deploy Prontuario - Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: senha
          MYSQL_DATABASE: prontuario_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 23

      - name: Instalar dependências
        run: npm install

      - name: Rodar ESLint
        run: npm run lint

      - name: Instalar Docker
        run: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
        continue-on-error: false
      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        continue-on-error: false

      - name: Rodar testes de integração
        run: docker compose up test

      - name: Deploy no Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "prontuario-backend"
          heroku_email: "seu-email@dominio.com"
          usedocker: true
          healthcheck: "/health"
          appdir: "."